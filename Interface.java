// --- Interface.java ---
/**
 * Interface du syst√®me UTMS.
 * 
 * Un menu principal pour interagir avec l'utilisateur.
 */
public class Interface {
    private static String typeUsager;
    private static int departId;
    private static int arriveeId;
    private static String choixCritere;

    /**
     * Affiche le menu principal et demande √† l'utilisateur de saisir une option.
     * <p>
     * Le menu comporte plusieurs choix, comme l'affichage des stations, la s√©lection d'un trajet,
     * l'affichage des lignes, etc.
     * </p>
     */
    public static void montrerMenu() {
        System.out.println("===========================================================");
        System.out.println("|                       MENU PRINCIPAL                    |");
        System.out.println("===========================================================");
        System.out.println("| 1) Afficher la liste des stations                       |");
        System.out.println("| 2) Afficher les d√©tails d'une station                   |");
        System.out.println("| 3) Choisir un trajet (accessibilit√©, distances, temps)  |");
        System.out.println("| 4) Afficher les lignes                                  |");
        System.out.println("| 5) Afficher le d√©tail d'une ligne                       |");
        System.out.println("| 6) Information prix ticket                              |");
        System.out.println("| 7) Quitter                                              |");
        System.out.println("===========================================================");
        System.out.print("\nVeuillez choisir une option: ");
        String choix = System.console().readLine();
        System.out.print("\n\n");
        choixMenu(choix);
    }

    /**
     * G√®re le choix de l'utilisateur dans le menu principal.
     * <p>
     * Cette m√©thode analyse la saisie de l'utilisateur et ex√©cute l'action appropri√©e :
     * <ul>
     *   <li>Afficher la liste des stations (ordre alphab√©tique ou anti-alphab√©tique).</li>
     *   <li>Afficher les d√©tails d'une station √† partir de son identifiant.</li>
     *   <li>Choisir un trajet. Dans ce cas, l'utilisateur doit s√©lectionner son type (r√©gulier, √©tudiant ou handicap√©),
     *       indiquer les IDs des stations de d√©part et d'arriv√©e, puis choisir un crit√®re d'optimisation.</li>
     *   <li>Afficher la liste des lignes ou le d√©tail d'une ligne.</li>
     *   <li>Afficher les informations concernant le prix du ticket (non impl√©ment√©e).</li>
     *   <li>Quitter l'application.</li>
     * </ul>
     * </p>
     *
     * @param choix La r√©ponse saisie par l'utilisateur.
     */
    public static void choixMenu(String choix) {
        switch (choix) {
            case "1":
                // Trier et afficher les stations dans l'ordre alphab√©tique ou anti-alphab√©tique
                Main.effacerTerminal();
                System.out.println("===========================================================");
                System.out.println("|                     LISTE DE STATIONS                   |");
                System.out.println("===========================================================");
                System.out.println("| 1) Ordre alphab√©tique                                   |");
                System.out.println("| 2) Ordre anti-alphab√©tique                              |");
                System.out.println("===========================================================");
                System.out.print("\nVeuillez choisir une option: ");
                String choixListeStation = System.console().readLine();
                System.out.print(" ----->>> üëå\n");
                switch (choixListeStation) {
                    case "1":
                        Stations.listerToutesLesStations();
                        break;
                    case "2":
                        Stations.listerToutesLesStationsInverse();
                        break;
                }
                System.out.print("\n\n");
                montrerMenu();
                break;

            case "2":
                System.out.print("Entrez l'ID de la station: ");
                int idStation = Integer.parseInt(System.console().readLine());
                System.out.print(" ----->>> üëå\n");
                Stations.afficherInformationsStation(idStation);
                System.out.print("\n\n");
                montrerMenu();
                break;
                
            case "3":
                System.out.println("===========================================================");
                System.out.println("|               QUEL TYPE D'USAGER √äTES-VOUS ?            |");
                System.out.println("===========================================================");
                System.out.println("| 1) Usager r√©gulier                                      |");
                System.out.println("| 2) √âtudiant                                             |");
                System.out.println("| 3) Usager en situation de handicap                      |");
                System.out.println("===========================================================");
                System.out.print("\nVeuillez choisir une option: ");
                typeUsager = System.console().readLine();
                System.out.print(" ----->>> üëå\n");

                System.out.print("ID de la station de d√©part : ");
                String departIdStr = System.console().readLine();
                departId = Integer.parseInt(departIdStr);
                
                System.out.print("ID de la station d'arriv√©e : ");
                String arriveeIdStr = System.console().readLine();
                arriveeId = Integer.parseInt(arriveeIdStr);

                System.out.println("===========================================================");
                System.out.println("|          QUEL EST V√îTRE CRIT√àRE D'OPTIMISATION ?        |");
                System.out.println("===========================================================");
                System.out.println("| 1) Le prix                                              |");
                System.out.println("| 2) Le temps                                             |");
                System.out.println("| 3) La distance                                          |");
                System.out.println("===========================================================");
                System.out.print("\nVeuillez choisir une option: ");
                choixCritere = System.console().readLine();
                System.out.print(" ----->>> üëå\n");

                Trajet.produireItineraire();

                System.out.print("\n\n");
                montrerMenu();
                break;

            case "4":
                Main.effacerTerminal();
                Lignes.listerToutesLesLignes();
                System.out.print("\n\n");
                montrerMenu();
                break;

            case "5":
                System.out.print("Entrez l'ID de la ligne: ");
                int idLigne = Integer.parseInt(System.console().readLine());
                System.out.print(" ----->>> üëå\n");
                Lignes.afficherInformationsLigne(idLigne);
                System.out.print("\n\n");
                montrerMenu();
                break;

            case "6":
                Main.effacerTerminal();
                // M√©thode d'affichage du ticket non impl√©ment√©e ici.
                // Prix.getPrixTicket();
                // System.out.print("\n\n");
                montrerMenu();
                break;

            case "7":
                Main.effacerTerminal();
                System.exit(0);
                break;

            default:
                Main.effacerTerminal();
                System.out.println("Choix invalide");
                System.out.print("\n\n");
                montrerMenu();
                break;
        }
    }

    /** Retourne le type d'usager s√©lectionn√©. */
    public static String getTypeUsager(){
        return typeUsager;
    }

    /** Retourne l'ID de la station de d√©part. */
    public static int getDepartId(){
        return departId;
    }

    /** Retourne l'ID de la station d'arriv√©e. */
    public static int getArriveeId(){
        return arriveeId;
    }

    /** Retourne le crit√®re d'optimisation choisi. */
    public static String getChoixCritere(){
        return choixCritere;
    }
}